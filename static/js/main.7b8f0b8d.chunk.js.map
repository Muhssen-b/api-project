{"version":3,"sources":["coin.js","App.js","reportWebVitals.js","index.js"],"names":["coin","name","marketCap","image","price","volume","symbol","search","priceChange","className","src","alt","toFixed","toLocaleString","App","useState","coins","setCoins","setSearch","useEffect","axios","get","then","res","data","console","log","catch","error","alert","filteredCoins","filter","toLowerCase","includes","type","placeholder","onChange","e","target","value","map","market_cap","current_price","price_change_percentage_24h","total_volume","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRA4CeA,EAzCF,YAAiF,IAA/EC,EAA8E,EAA9EA,KAAMC,EAAwE,EAAxEA,UAAWC,EAA6D,EAA7DA,MAAOC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,OAAsBC,GAAyB,EAAvCN,KAAuC,EAAjCO,OAAiC,EAAzBD,QAAQE,EAAiB,EAAjBA,YAGxE,OACI,qBAAKC,UAAU,iBAAf,SACI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,OAAf,UACI,qBAAKC,IAAKP,EAAOQ,IAAI,SAASF,UAAU,eACpC,6BAAKR,IACL,mBAAGQ,UAAU,cAAb,SACKH,OAGL,sBAAKG,UAAU,YAAf,UACI,oBAAGA,UAAU,aAAb,cAA4BL,EAAMQ,QAAQ,MAC1C,oBAAGH,UAAU,cAAb,cAA6BJ,EAAOQ,uBAExC,qBAAKJ,UAAU,GAAf,SACCD,EAAc,EACX,oBAAGC,UAAU,MAAb,UACKD,EAAYI,QAAQ,GADzB,OAGC,oBAAGH,UAAU,QAAb,UACAD,EAAYI,QAAQ,GADpB,SAKL,sBAAKH,UAAU,kBAAf,sBAEMP,EAAUW,0BC6BzBC,MAvDf,WAAgB,IAAD,EAEcC,mBAAS,IAFvB,mBAELC,EAFK,KAEEC,EAFF,OAGeF,mBAAS,IAHxB,mBAGNR,EAHM,KAGEW,EAHF,KAKbC,qBAAU,WACRC,IAAMC,IAAI,4HAEXC,MAAK,SAAAC,GAEJN,EAASM,EAAIC,MACbC,QAAQC,IAAIH,EAAIC,SACfG,OAAM,SAAAC,GAAK,OAAIC,MAAM,6BACrB,IAEH,IAGMC,EAAgBd,EAAMe,QAAO,SAAA/B,GAAI,OACrCA,EAAKC,KAAK+B,cAAcC,SAAS1B,EAAOyB,kBAI1C,OACE,sBAAKvB,UAAU,WAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAf,6BAGE,+BACE,uBAAOyB,KAAK,OAAOC,YAAY,SAAS1B,UAAU,aAAa2B,SAfpD,SAAAC,GACnBnB,EAAUmB,EAAEC,OAAOC,eAiBlB,8BACCT,EAAcU,KAAI,SAAAxC,GACjB,OAAO,cAAC,EAAD,CACLC,KAAMD,EAAKC,KACXE,MAAOH,EAAKG,MACZG,OAAQN,EAAKM,OACbJ,UAAWF,EAAKyC,WAChBrC,MAAOJ,EAAK0C,cACZlC,YAAaR,EAAK2C,4BAClBtC,OAAQL,EAAK4C,cAPG5C,EAAK6C,aC7BfC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7b8f0b8d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './coin.css'\r\n\r\nconst coin = ({name, marketCap, image, price, volume, coin, search, symbol, priceChange}) => {\r\n\r\n  \r\n    return (\r\n        <div className=\"coin-container\">\r\n            <div className=\"coin-row\">\r\n                <div className=\"coin\">\r\n                    <img src={image} alt=\"crypto\" className=\"coin-image\" />\r\n                        <h1>{name}</h1>\r\n                        <p className=\"coin-symbol\">\r\n                            {symbol}\r\n                        </p>\r\n                        </div>\r\n                        <div className=\"coin-data\">\r\n                            <p className=\"coin-price\">${price.toFixed(2)}</p>\r\n                            <p className=\"coin-volume\">${volume.toLocaleString() }</p>\r\n                        </div>\r\n                        <div className=\"\">\r\n                        {priceChange < 0 ? (\r\n                            <p className=\"red\">\r\n                                {priceChange.toFixed(2)}%\r\n                            </p>\r\n                        ) : (<p className=\"green\">\r\n                            {priceChange.toFixed(2)}%\r\n                            </p>\r\n                        )}\r\n                        </div>\r\n                        <div className=\"coin-market-cap\">\r\n                            Mkt Cap \r\n                            ${marketCap.toLocaleString()}\r\n                        </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n\r\n            \r\n       \r\n    )\r\n}\r\n\r\nexport default coin\r\n","\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport React, {useState, useEffect} from 'react';\r\nimport Coin from './coin.js'\r\n\r\nfunction App() {\r\n\r\n  const [ coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=AUD&order=market_cap_desc&per_page=100&page=1&sparkline=false\")\r\n\r\n  .then(res => {\r\n  \r\n    setCoins(res.data);\r\n    console.log(res.data);\r\n  }).catch(error => alert(\"Yo there is an error\"));\r\n  }, [])\r\n\r\n  const handleChange = e => {\r\n    setSearch(e.target.value);\r\n  }\r\n  const filteredCoins = coins.filter(coin => \r\n    coin.name.toLowerCase().includes(search.toLowerCase())\r\n  ); \r\n  \r\n\r\n  return (\r\n    <div className=\"coin-app\">\r\n      <div className=\"coin-search\">\r\n        <div className=\"coin-text\">\r\n          Search currency\r\n          </div>\r\n          <form>\r\n            <input type='text' placeholder=\"search\" className=\"coin-input\" onChange={handleChange} />\r\n          </form>\r\n        </div>\r\n     <div>\r\n     {filteredCoins.map(coin=> {\r\n       return <Coin key={coin.id} \r\n         name={coin.name} \r\n         image={coin.image}\r\n         symbol={coin.symbol}\r\n         marketCap={coin.market_cap}\r\n         price={coin.current_price}\r\n         priceChange={coin.price_change_percentage_24h}\r\n         volume={coin.total_volume}         \r\n         />\r\n       \r\n     })}\r\n     </div>\r\n     \r\n       \r\n     \r\n     \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}